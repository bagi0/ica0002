---

- name: Download influxdb
  ansible.builtin.get_url:
    url: https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_amd64.deb
    dest: /etc/influxdb_1.8.10_amd64.deb
    mode: '0755'

- name: Install influxDB
  ansible.builtin.apt:
    deb: /etc/influxdb_1.8.10_amd64.deb
    
- name: Add InfluxDB conf file
  ansible.builtin.template:
    dest: /etc/influxdb/influxdb.conf
    src: influxdb.conf
  notify: restart influxdb

- name: Ensure influxdb is always started please
  ansible.builtin.service:
    name: influxdb
    enabled: yes
    state: started
    
# Influx Data Source for Grafana located in Grafana folder

- name: Add Telegraf Apt signing key
  ansible.builtin.apt_key:
    url: https://repos.influxdata.com/influxdb.key
    state: present
    
- name: Get Telegraf deb
  get_url:
    url: https://dl.influxdata.com/telegraf/releases/telegraf_1.24.2-1_amd64.deb
    dest: /opt/telegraf.deb
  
- name: Install Telegraf
  apt:
    deb: /opt/telegraf.deb
    
- name: Add Telegraf conf file
  ansible.builtin.template:
    dest: /etc/telegraf/telegraf.conf
    src: telegraf.conf
  notify: restart telegraf
    
- name: Ensure influxdb is always started please
  ansible.builtin.service:
    name: telegraf
    enabled: yes
    state: started
    
- name: Add Influxdb Exporter Service Binary file
  ansible.builtin.copy:
    dest: /usr/local/bin/influx_stats_exporter_linux_amd64
    src: influx_stats_exporter_linux_amd64
    
- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: /usr/local/bin/influx_stats_exporter_linux_amd64
    owner: prometheus
    group: prometheus
    mode: '0744'
    
- name: Add Influxdb Exporter Service
  ansible.builtin.copy:
    dest: /etc/systemd/system/prometheus-influxdb-stats-exporter.service
    src: prometheus-influxdb-stats-exporter.service
    
- name: Execute systemd reload to enable influx exporter service
  ansible.builtin.systemd:
    daemon_reload: yes
    
- name: Start influx exporter uncodnitionally
  ansible.builtin.service:
    name: prometheus-influxdb-stats-exporter.service
    state: started
    enabled: yes
 
- name: Create InfluxDB backup and upload cron jobs
  ansible.builtin.cron:
    name: "{{ item.name }}"
    minute: "{{ item.minute }}"
    hour: "{{ item.hour }}"
    weekday: "{{ item.weekday }}"
    job: "{{ item.job }}"
    user: backup
    cron_file: influxdb-backup
  loop:
    - name: "InfluxDB telegraf database backup"
      minute: "0"
      hour: "17"   # The backup starts at 19:00
      weekday: "*" # Every day
      job: "rm -rf /home/backup/influxdb/*; influxd backup -portable -database telegraf /home/backup/influxdb"

    - name: "Duplicity full backup of InfluxDB"
      minute: "15"
      hour: "17"   # 19:15
      weekday: "6" # Full backup on Saturday
      job: "duplicity --no-encryption full /home/backup/influxdb/ rsync://{{ user }}@backup.{{ fqdn }}/influxdb"

    - name: "Duplicity incremental backup of InfluxDB"
      minute: "30"
      hour: "17"   # 19:30
      weekday: "0-5" # Incremental backups on other days
      job: "duplicity --no-encryption incremental /home/backup/influxdb/ rsync://{{ user }}@backup.{{ fqdn }}/influxdb"
  
- name: Add InfluxDB CNAME records
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ dns_nsupdate_key }}"
    server: "localhost"
    zone: "{{ fqdn }}"
    record: "{{ item.key }}"
    type: "CNAME"
    value: "{{ item.value }}"
  loop: "{{ dns_influx_records | dict2items }}"
  delegate_to: "{{ groups['dns_primary'][0] }}"
